import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from scipy import stats

df = pd.read_csv('your_dataset.csv')

print(df.shape)
df.head()

df.info()
df.describe(include='all')

missing = df.isnull().sum()
plt.figure(figsize=(12,6))
sns.heatmap(df.isnull(), cbar=False, cmap='viridis')
plt.title('Missing Values Heatmap')
plt.show()
missing_percentage = (df.isnull().sum() / len(df)) * 100
missing_percentage[missing_percentage > 0]

num_cols = df.select_dtypes(include=['int64', 'float64']).columns
df[num_cols].hist(figsize=(16, 10), bins=30)
plt.suptitle("Histograms of Numerical Features")
plt.show()

cat_cols = df.select_dtypes(include=['object']).columns
for col in cat_cols:
    plt.figure(figsize=(8,4))
    sns.countplot(data=df, x=col, order=df[col].value_counts().index)
    plt.xticks(rotation=45)
    plt.title(f'Count Plot - {col}')
    plt.show()

for col in num_cols:
    plt.figure(figsize=(8, 4))
    sns.boxplot(x=df[col])
    plt.title(f'Boxplot of {col}')
    plt.show()

corr_matrix = df[num_cols].corr()
plt.figure(figsize=(12,8))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title("Correlation Matrix")
plt.show()

# Example scatter plot - replace feature1 and feature2
# sns.scatterplot(data=df, x='feature1', y='feature2', hue='target')
# plt.title("Scatter Plot between feature1 and feature2")
# plt.show()

z_scores = stats.zscore(df[num_cols])
abs_z_scores = abs(z_scores)
filtered_entries = (abs_z_scores < 3).all(axis=1)
df_cleaned = df[filtered_entries]
